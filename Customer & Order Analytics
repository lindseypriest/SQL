#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

$2. How many of those orders were for an iPhone? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
FROM BIT_DB.customers 

INNER JOIN BIT_DB.FebSales 
ON customers.order_id=FebSales.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT DISTINCT product, price 
FROM BIT_DB.JanSales 
ORDER BY price ASC LIMIT 1 

#5. What is the total revenue for each product sold in January?
SELECT SUM(quantity)*price AS revenue
,product
FROM BIT_DB.JanSales
GROUP BY product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity), 
product, 
SUM(quantity)*price AS revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(DISTINCT customers.acctnum), 
AVG(quantity*price)
FROM BIT_DB.FebSales 
LEFT JOIN BIT_DB.customers 
ON FebSales.orderid=customers.order_id
WHERE FebSales.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID'

#8. List the orders made in February between 2/13/19 and 2/18/19.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

#9. Find the location of the order made on 2/18/29 at 1:35am. 
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'

#10. Find the total amount of products sold on 2/18/19.
SELECT SUM(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

#11. List all the products that were ordered on 2/18/19.
SELECT orderdate 
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%'

#12. List all the battery products sold in February. 
SELECT DISTINCT Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

#13. List all the products sold in February that have a price ending in $0.99.
SELECT DISTINCT Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'

#14. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product 

#15. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2

#16. How many of each type of headphone were sold in February?
SELECT product, SUM(quantity) AS quantity
FROM BIT_DB.FebSales
WHERE product like '%Headphones%'
GROUP BY 

#17. What was the average amount spent per account in February?
SELECT AVG(quantity*price) 
FROM BIT_DB.FebSales 

LEFT JOIN BIT_DB.customers 
ON FebSales.orderid=customers.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#18. What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/COUNT(customers.acctnum)
FROM BIT_DB.FebSales

LEFT JOIN BIT_DB.customers 
ON FebSales.orderid=customers.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID'

#19. Which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT product, SUM(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY SUM(quantity*price) DESC
LIMIT 1

